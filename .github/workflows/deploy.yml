name: deploy
on:
    push:
        branches:
            - master

jobs:
    prerelease:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v1
            - name: test
              run: |
                npm ci 
                npm test -- --coverage
                cd lambdas
                npm ci
                npm test -- --coverage
                cd ..
            - name: setup for deploy
              run: |
                aws configure set region us-east-1
                npm ci
                url=$(node ./scripts/getApiUrl)
                googleClientId=$(node ./scripts/getGoogleId)
                facebookAppId=$(node ./scripts/getFacebookId)
                echo "REACT_APP_ApiUrl=$url" >.env
                echo "REACT_APP_GoogleClientID=$googleClientId" >> .env
                echo "REACT_APP_FacebookAppID=$facebookAppId" >> .env
                for i in {1..5}; do wget -O ./scripts/releases.json https://api.github.com/repos/realoptions/option_price_faas/releases/latest?access_token=$GITHUB_TOKEN && break || sleep 10; done 
                tag=$(node ./scripts/outputTag)
                echo "REACT_APP_TAG=$tag" >> .env
                npm run build
                cd lambdas
                echo "{\"GoogleClientID\":\"$googleClientId\", \"FacebookAppID\":\"$facebookAppId\"}" > clientInfo.json
                cd ..
                cd build
                wget https://github.com/phillyfan1138/fang_oost_cal_charts/raw/master/docs/OptionCalculation.pdf
                wget https://github.com/phillyfan1138/fang_oost_cal_charts/raw/master/docs/OptionCalibration.pdf
                cd ..
            - name: deploy aws
              run: |
                cd lambdas
                rm -r node_modules
                npm ci
                cd ..
                npm install -g serverless
                sls deploy
              env:
                CI: true
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

            - name: deploy ghpages
              uses: JamesIves/github-pages-deploy-action@master
              env: 
                ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
                BRANCH: gh-pages
                FOLDER: build